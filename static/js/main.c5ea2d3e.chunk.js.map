{"version":3,"sources":["api/userAPI.js","components/Login.js","components/Navbar.js","api/postAPI.js","api/commentAPI.js","components/Comment.js","components/Comments.js","components/PostForm.js","components/Post.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["checkLogin","loginData","fetch","then","response","json","users","foundUser","find","user","email","username","password","id","name","theme","createTheme","LoginIn","setUser","handleSubmit","event","a","preventDefault","data","FormData","currentTarget","get","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","onSubmit","mt","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","mb","Grid","container","item","xs","Link","href","Navbar","isAuth","React","anchorEl","setAnchorEl","handleClose","flexGrow","AppBar","position","Toolbar","IconButton","size","onClick","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","deletePost","postId","method","getComments","Comment","comment","ListItem","padding","style","ListItemText","primary","secondary","Fragment","body","Divider","Comments","useState","comments","setComments","useEffect","fetchComments","commentComponents","map","u","List","width","PostForm","userId","title","submitPost","cancel","postData","defaultValue","rows","multiline","justifyContent","Post","post","postOwner","updatePost","isCommentsOpen","setIsCommentsOpen","isFormOpen","setIsFormOpen","isPostOwner","ListItemAvatar","alt","src","ListItemButton","Posts","setUsers","posts","setPosts","fetchData","handleAddPost","JSON","stringify","headers","handleUpdatePost","updatedPost","handleDeletePost","ok","filter","postComponents","Math","floor","random","buttonContainer","textAlign","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5ea2d3e.chunk.js","sourcesContent":["// Get user\nexport const getUsers = () => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n}\n\n// Check user credentials\nexport const checkLogin = (loginData) => {\n    return fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then(users => {\n        const foundUser = users.find(user => user.email === loginData.email)\n        if(!foundUser || foundUser.username !== loginData.password) {return false};\n        return {\n            id: foundUser.id,\n            name: foundUser.name,\n            username: foundUser.username,\n            email: foundUser.email\n        }\n    })\n}\n","import * as React from 'react';\nimport { checkLogin } from '../api/userAPI';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default function LoginIn({ setUser }) {\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        // eslint-disable-next-line no-console\n        const loginData = {\n            email: data.get('email'),\n            password: data.get('password'),\n        }\n\n        const user = await checkLogin(loginData);\n        if (user) { setUser(user) }\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\n\nexport default function Navbar({setUser, isAuth}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box  sx={{ flexGrow: 1}}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            The new awesome crazy test app\n          </Typography>\n          {isAuth && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              > \n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={() => setUser(null)}>Logout</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","// Get all posts\nexport const getPosts = () => {\n    return fetch('https://jsonplaceholder.typicode.com/posts')\n        .then((response) => response.json())\n};\n\n// Add post\nexport const addPost = (post) => {\n    return fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify({\n            title: post.title,\n            body: post.body,\n            userId: post.userId,\n        }),\n        headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n        },\n    })\n        .then((response) => response.json())\n};\n\n// Update post\nexport const updatePost = (post) => {\n    return fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n            id: post.id,\n            title: post.title,\n            body: post.body,\n            userId: post.userId,\n        }),\n        headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n        },\n    })\n        .then((response) => response.json())\n}\n\n// Delete post\nexport const deletePost = (postId) => {\n    return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\n        method: 'DELETE',\n    });\n};","export const getComments = (postId) => {\n    return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\n    .then((response) => response.json())\n}","import React from 'react'\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\n\nexport default function Comment({ comment, users, username }) {\n    return (\n        <>\n            <ListItem alignItems=\"flex-start\" padding=\"0\" style={{padding: \"1px\"}}>\n                <ListItemText \n                    style={{color: \"#212121\"}}\n                    primary={comment.name} \n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                sx={{ display: 'inline' }}\n                                component=\"span\"\n                                variant=\"body2\"\n                                color=\"text.primary\"\n                            >\n                                {username}\n                            </Typography>\n                            {\" - \" +  comment.body}\n                        </React.Fragment>\n                    }/>\n                </ListItem>\n            <Divider />\n        </>\n    );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport { getComments } from '../api/commentAPI';\nimport List from '@mui/material/List';\nimport Comment from './Comment';\n\n\nexport default function Comments({postId, users}) {\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n      const fetchComments = async () => {\n        setComments(await getComments(postId));\n      }\n      fetchComments()\n    },[postId]);\n\n    const commentComponents = comments.map(comment => {\n        let username = users.find(u => u.email === comment.email)?.username || \"unknown\";\n        return <Comment key= {comment.id} comment={comment} users={users} username={username}/>\n    });\n\n    return (\n        <List sx={{ width: '100%', margin: \"0 auto\", maxWidth: '80%', bgcolor: 'background.paper' }}>            \n            { commentComponents }\n        </List>\n    )\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport default function PostForm({ postId = null, userId, title = \"\", body = \"\", submitPost, cancel }) {\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        // eslint-disable-next-line no-console\n        let postData = {\n            id: postId,\n            title: data.get('title'),\n            body: data.get('content'),\n            userId\n        }\n        submitPost(postData);\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" style={{ padding: \"0\", width: \"75%\" }}>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        width: \"100%\"\n                    }}\n                >\n                    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1, width: \"100%\" }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"title\"\n                            name=\"title\"\n                            label=\"title\"\n                            defaultValue={title}\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"content\"\n                            name=\"content\"\n                            label=\"content\"\n                            defaultValue={body}\n                            rows=\"5\"\n                            multiline={true}\n                        />\n                        <Box\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                justifyContent: 'space-between',\n                                mt: 3,\n                                mb: 2\n                            }}\n                        >\n                            <Button\n                                type=\"button\"\n                                variant=\"contained\"\n                                color=\"error\"\n                                onClick={cancel}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"success\"\n                            >\n                                Send\n                            </Button>\n                        </Box>\n                    </Box>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","import React, { useState } from 'react'\nimport ListItem from '@mui/material/ListItem';\nimport Divider from '@mui/material/Divider';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Comments from './Comments';\nimport PostForm from './PostForm';\n\nexport default function Post({ post, users, postOwner, user, deletePost, updatePost }) {\n    const [isCommentsOpen, setIsCommentsOpen] = useState(false)\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const isPostOwner = postOwner.id === user.id;\n\n    const handleEdit = (postData) => {\n        updatePost(postData);\n        setIsFormOpen(false);\n    }\n\n    return (\n        <> {\n            isFormOpen\n                ? <PostForm\n                    postId={post.id}\n                    userId={user.id}\n                    title={post.title}\n                    body={post.body}\n                    submitPost={handleEdit}\n                    cancel={() => setIsFormOpen(false)}\n                />\n                :\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src={`https://i.pravatar.cc/150?img=${post.userId}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={post.title}\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    sx={{ display: 'inline' }}\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"text.primary\"\n                                >\n                                    {postOwner.username}\n                                </Typography>\n                                {\" - \" + post.body}\n                                <br />\n                                <span\n                                    onClick={() => setIsCommentsOpen(!isCommentsOpen)}\n                                    style={{ margin: 0, color: \"#1976d2\" }}>\n                                    {!isCommentsOpen ? \"open\" : \"close\"} comments\n                                </span>\n                            </React.Fragment>\n                        }\n                    />\n                    {\n                        isPostOwner\n                        && <div>\n                            <ListItemButton onClick={() => setIsFormOpen(true)}>Edit</ListItemButton>\n                            <ListItemButton onClick={deletePost}>Delete</ListItemButton>\n                        </div>\n                    }\n\n                </ListItem>\n        }\n            {isCommentsOpen && <Comments postId={post.id} users={users} />}\n            <Divider />\n        </>\n    );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { getPosts, addPost, updatePost, deletePost } from '../api/postAPI';\nimport { getUsers } from '../api/userAPI';\nimport List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport Post from './Post';\nimport PostForm from './PostForm';\n\nexport default function Posts({ user }) {\n  const [users, setUsers] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setUsers(await getUsers());\n      setPosts(await getPosts());\n    }\n    fetchData()\n  }, []);\n\n  const handleAddPost = async (postData) => {\n    setPosts([await addPost(postData), ...posts]);\n    setIsFormOpen(false);\n  };\n\n  const handleUpdatePost = async (postData) => {\n    const updatedPost = await updatePost(postData);\n    updatedPost && setPosts(posts.map(post => post.id === updatedPost.id ? updatedPost : post));\n  }\n\n  const handleDeletePost = async (postId) => {\n    (await deletePost(postId)).ok && setPosts(posts.filter(post => post.id !== postId));\n  }\n\n  const postComponents = posts.map(post => {\n    const postOwner = users.find(u => u.id === post.userId);\n    return <Post\n      key={post.id + Math.floor(Math.random() * 999999)}\n      post={post}\n      users={users}\n      user={user}\n      postOwner={postOwner}\n      deletePost={() => handleDeletePost(post.id)}\n      updatePost={handleUpdatePost} />\n  });\n\n  const buttonContainer = <div style={{ textAlign: \"right\", maxWidth: '80%', margin: \"10px auto\" }}>\n    <Button onClick={() => setIsFormOpen(true)} color=\"secondary\">add Post</Button>\n  </div>\n\n  return (\n    <>\n      <h1>Posts</h1>\n      {isFormOpen\n        ? <PostForm\n          userId={user.id}\n          submitPost={handleAddPost}\n          cancel={() => setIsFormOpen(false)}\n        />\n        : buttonContainer}\n      <List sx={{ width: '100%', margin: \"0 auto\", maxWidth: '80%', bgcolor: 'background.paper' }}>\n        {postComponents}\n      </List>\n    </>\n  )\n}\n","import './App.css';\nimport {useState} from 'react';\nimport Login from './components/Login';\nimport Navbar from './components/Navbar';\nimport Posts from './components/Posts';\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Navbar setUser={setUser} isAuth={!!user}/>\n      {\n        user?.id \n        ? <Posts user={user}/>\n        : <Login setUser={setUser}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}